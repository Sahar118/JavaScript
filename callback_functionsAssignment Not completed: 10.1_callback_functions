// Write a function called ‘isString’ that receives 2 arguments,
// a string and a callback function. The function checks that
// the string is indeed a string. If the string is a string, pass
// the string to a callback function that logs that string to the
// console.

function callBack(f){
f();
f();
}

const isString = (str, callback) => {
    if(typeof str === 'string'){
        callback(str); 
    }
};
isString('my string', (str)=> {
    console.log(str);
});


// 2. Create a function called ‘firstWordUpperCase’ that
// receives 2 arguments, a string and a callback function.
// The function will capitalize the first word in the sentence
// and pass the string to a callback function which will create
// dashes between the words.

const firstWordUppperCase= (mystr, mycallback)=> {
    const newSentence=mystr.split('');
    newSentence[0]=newSentence.toUpperCase();
    newSentence=newSentence.join(' ');
    mycallback(newSentence)

    firstWordUppperCase( ' kjsdhgkh hskjfdh gksdh k hkasdh gh k haskdjh gkhsfdg khds gkh  hasdk gjxmvz h isakhj tkawt ',
        (str) => {
            return str.split(' ').join('-');
        }    
        );    
        
        
        
        
        
        // 3. Call the ‘firstWordUpperCase’ function with a callback of
        // your choice.
        
        // 4. Create your own function that will receive from one of its
        // arguments a callback function.





    firstWordUppperCase( ' kjsdhgkh hskjfdh gksdh k hkasdh gh k haskdjh gkhsfdg khds gkh  hasdk gjxmvz h isakhj tkawt ',
    (str) => {
        return str.split(' ').join('-');
    }    
);    


const spaceToDash =(str) => {
    return str.split(' ').join('-');
};    

const spaceToHash = (str) => {
    return str.spilit(' ').join('#');

};    

firstWordUppperCase( ' kjsdhgkh hskjfdh gksdh k hkasdh gh k haskdjh gkhsfdg khds gkh  hasdk gjxmvz h isakhj tkawt ',
 spaceToDash
 );

 
 firstWordUppperCase( ' kjsdhgkh hskjfdh gksdh k hkasdh gh k haskdjh gkhsfdg khds gkh  hasdk gjxmvz h isakhj tkawt ',
 spaceToHash
 );

 
 
