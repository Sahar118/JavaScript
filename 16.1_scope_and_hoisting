// Block 1
function funcA() {
  var a = 1;
  console.log(foo());
  console.log(a);
  function foo() {
    return 2;
  }
}
funcA();

// -----------------------2----------------------

// var fullName = 'John Doe';
// var obj = {
// fullName: 'Colin Ihrig',
// prop: {
//     fullName: 'Aurelio De Rosa',
//     getFullName: function () {
//         return this.fullName;
//     }
// }
// };
// console.log(obj.prop.getFullName());
// var test = obj.prop.getFullName;
// console.log(test());

var fullName = "John Doe";
var obj = {
  fullName: "Colin Ihrig",
  prop: {
    fullName: "Aurelio De Rosa",
    getFullName: function () {
      return this.fullName;
    },
  },
};
console.log(obj.prop.getFullName());
var test = obj.prop.getFullName();
console.log(test);

// -----------------------3----------------------

// function funcB() {
//     let a = b = 0;
//     a++;
//     return a;
//     }
//     funcB();
//     console.log(typeof a);
//     console.log(typeof b);

function funcB() {
  a = b = 0;
  a++;
  return a;
}
funcB();
console.log(typeof a);
console.log(typeof b);

// -----------------------4----------------------

// function funcC() {
//     console.log("1");
//     }
//     funcC();
//     function funcC() {
//     console.log("2");
//     }
//     funcC();

funcC();
function funcC() {
  console.log("1");
  console.log("2");
}
funcC();

// -----------------------5----------------------
// function funcD1() {
//     d = 1;
//     }
//     funcD1();
//     console.log(d);
//     function funcD2() {
//     var e = 1;
//     }
//     funcD2();
//     console.log(e);

function funcD1() {
  d = 1;
}
funcD1();
console.log(d);
function funcD2() {
  e = 1;
}
funcD2();
console.log(e);

// -----------------------6----------------------

// function funcE() {
//     console.log("Value of f in local scope: ", f);
//     }
//     console.log("Value of f in global scope: ", f);
//     var f = 1;
//     funcE();

function funcE() {
  console.log("Value of f in local scope: ", f);
}
var f = 1;
console.log("Value of f in global scope: ", f);
funcE();
