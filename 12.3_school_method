const school = {
    teachers: [
      {
        id: 1,
        name: "Pinchas",
        subjects: ["chemistry", "biology", "physics"],
        students: [],
        capacityLeft: 3,
      },
  
      {
        id: 2,
        name: "Williams",
        subjects: ["history", "ethics"],
        students: [],
        capacityLeft: 2,
      },
    ],
  
    students: [
      { id: 10, name: "Jennifer", age: 20 },
      { id: 11, name: "Howard", age: 23 },
      { id: 12, name: "Old-Timmy", age: 86 },
      { id: 13, name: "Houston", age: 21 },
    ],
      assignTeachersSubject (id, subject) {
          const {teachers , students} = this
          const teacher = teachers.find(el => id === el.id)
          if (teacher.subjects.includes(subject) === false){
            return  teacher.subjects.push(subject)
          } return console.log('subject already exists');
      }
  }
  
  
//   1. A method called “findPerson” takes two arguments, a type (either a student or teacher), and an id. It will return a
particular object of that person. 

function findPerson (role, id) {
  return role.find(el => id === el.id)
  }
 console.log(

      findPerson(school.teachers, 1)
      );

    //   *****************************************************************

//   2. A method called “assignStudent” that takes two arguments, a student’s id and a subject. Assign all of the
// students to the first available teacher who teaches that subject and who is not in full capacity. If all of the teachers
// are in the full capacity log to the console “Sorry, no  available teachers left”.
  function assignStudent (id, subject){
      const student = school.students.find(el => id === el.id);
      const teacher = school.teachers.find(b => b.subjects.includes(subject))
      if (teacher.capacityLeft >=1){
          return teacher.students = student,
          teacher.capacityLeft -= 1
      } else {console.log('Sorry, no available teachers left')}
  }

  assignStudent(13, "history")
  console.log(school);
  
  ***********************not completed *************************

